"""Initial database schema with users, bots, conversations and messages

Revision ID: e391a7a5627e
Revises: 
Create Date: 2025-08-29 16:05:16.260721

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy import Text

# revision identifiers, used by Alembic.
revision: str = 'e391a7a5627e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('is_verified', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('subscription_status', sa.String(length=20), server_default='free', nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), server_default='0', nullable=False),
    sa.Column('locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('verification_token', sa.String(length=255), nullable=True),
    sa.Column('verification_token_expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reset_token', sa.String(length=255), nullable=True),
    sa.Column('reset_token_expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('profile_image_url', sa.String(length=500), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('preferences', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_users_email_active', 'users', ['email', 'is_active'], unique=False)
    op.create_index('idx_users_last_login', 'users', ['last_login'], unique=False)
    op.create_index('idx_users_reset_token', 'users', ['reset_token'], unique=False)
    op.create_index('idx_users_subscription', 'users', ['subscription_status'], unique=False)
    op.create_index('idx_users_username_active', 'users', ['username', 'is_active'], unique=False)
    op.create_index('idx_users_verification', 'users', ['verification_token'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_reset_token'), 'users', ['reset_token'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_index(op.f('ix_users_verification_token'), 'users', ['verification_token'], unique=False)
    op.create_table('bots',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('model_name', sa.String(length=100), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=False),
    sa.Column('max_tokens', sa.Integer(), nullable=True),
    sa.Column('system_prompt', sa.Text(), nullable=True),
    sa.Column('is_public', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('knowledge_base_id', sa.String(length=255), nullable=True),
    sa.Column('capabilities', sa.Text(), nullable=True),
    sa.Column('usage_count', sa.Integer(), server_default='0', nullable=False),
    sa.Column('max_daily_usage', sa.Integer(), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('color_theme', sa.String(length=7), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('total_conversations', sa.Integer(), server_default='0', nullable=False),
    sa.Column('average_rating', sa.Float(), nullable=True),
    sa.Column('total_ratings', sa.Integer(), server_default='0', nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_bots_category', 'bots', ['category'], unique=False)
    op.create_index('idx_bots_knowledge_base', 'bots', ['knowledge_base_id'], unique=False)
    op.create_index('idx_bots_name_owner', 'bots', ['name', 'owner_id'], unique=False)
    op.create_index('idx_bots_owner_active', 'bots', ['owner_id', 'is_active'], unique=False)
    op.create_index('idx_bots_public_active', 'bots', ['is_public', 'is_active'], unique=False)
    op.create_index('idx_bots_usage_count', 'bots', ['usage_count'], unique=False)
    op.create_index(op.f('ix_bots_category'), 'bots', ['category'], unique=False)
    op.create_index(op.f('ix_bots_knowledge_base_id'), 'bots', ['knowledge_base_id'], unique=False)
    op.create_index(op.f('ix_bots_name'), 'bots', ['name'], unique=False)
    op.create_index(op.f('ix_bots_owner_id'), 'bots', ['owner_id'], unique=False)
    op.create_table('conversations',
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('bot_id', sa.UUID(), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('is_pinned', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('message_count', sa.Integer(), server_default='0', nullable=False),
    sa.Column('total_tokens_used', sa.Integer(), server_default='0', nullable=False),
    sa.Column('context_summary', sa.Text(), nullable=True),
    sa.Column('settings', sa.Text(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['bot_id'], ['bots.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_conversations_bot_active', 'conversations', ['bot_id', 'is_active'], unique=False)
    op.create_index('idx_conversations_created_at', 'conversations', ['created_at'], unique=False)
    op.create_index('idx_conversations_rating', 'conversations', ['rating'], unique=False)
    op.create_index('idx_conversations_user_active', 'conversations', ['user_id', 'is_active'], unique=False)
    op.create_index('idx_conversations_user_pinned', 'conversations', ['user_id', 'is_pinned'], unique=False)
    op.create_index(op.f('ix_conversations_bot_id'), 'conversations', ['bot_id'], unique=False)
    op.create_index(op.f('ix_conversations_user_id'), 'conversations', ['user_id'], unique=False)
    op.create_table('messages',
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('conversation_id', sa.UUID(), nullable=False),
    sa.Column('tokens_used', sa.Integer(), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('model_name', sa.String(length=100), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('message_metadata', sa.Text(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('is_helpful', sa.Boolean(), nullable=True),
    sa.Column('user_feedback', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_messages_conversation_created', 'messages', ['conversation_id', 'created_at'], unique=False)
    op.create_index('idx_messages_processing_time', 'messages', ['processing_time_ms'], unique=False)
    op.create_index('idx_messages_role', 'messages', ['role'], unique=False)
    op.create_index('idx_messages_tokens', 'messages', ['tokens_used'], unique=False)
    op.create_index(op.f('ix_messages_conversation_id'), 'messages', ['conversation_id'], unique=False)
    op.create_index(op.f('ix_messages_role'), 'messages', ['role'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_messages_role'), table_name='messages')
    op.drop_index(op.f('ix_messages_conversation_id'), table_name='messages')
    op.drop_index('idx_messages_tokens', table_name='messages')
    op.drop_index('idx_messages_role', table_name='messages')
    op.drop_index('idx_messages_processing_time', table_name='messages')
    op.drop_index('idx_messages_conversation_created', table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_conversations_user_id'), table_name='conversations')
    op.drop_index(op.f('ix_conversations_bot_id'), table_name='conversations')
    op.drop_index('idx_conversations_user_pinned', table_name='conversations')
    op.drop_index('idx_conversations_user_active', table_name='conversations')
    op.drop_index('idx_conversations_rating', table_name='conversations')
    op.drop_index('idx_conversations_created_at', table_name='conversations')
    op.drop_index('idx_conversations_bot_active', table_name='conversations')
    op.drop_table('conversations')
    op.drop_index(op.f('ix_bots_owner_id'), table_name='bots')
    op.drop_index(op.f('ix_bots_name'), table_name='bots')
    op.drop_index(op.f('ix_bots_knowledge_base_id'), table_name='bots')
    op.drop_index(op.f('ix_bots_category'), table_name='bots')
    op.drop_index('idx_bots_usage_count', table_name='bots')
    op.drop_index('idx_bots_public_active', table_name='bots')
    op.drop_index('idx_bots_owner_active', table_name='bots')
    op.drop_index('idx_bots_name_owner', table_name='bots')
    op.drop_index('idx_bots_knowledge_base', table_name='bots')
    op.drop_index('idx_bots_category', table_name='bots')
    op.drop_table('bots')
    op.drop_index(op.f('ix_users_verification_token'), table_name='users')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_reset_token'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_users_verification', table_name='users')
    op.drop_index('idx_users_username_active', table_name='users')
    op.drop_index('idx_users_subscription', table_name='users')
    op.drop_index('idx_users_reset_token', table_name='users')
    op.drop_index('idx_users_last_login', table_name='users')
    op.drop_index('idx_users_email_active', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
