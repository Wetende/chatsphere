name: ChatSphere CD

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: chatsphere/backend,chatsphere/frontend
        tags: |
          type=ref,event=branch
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=sha
    
    - name: Build and push backend image
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        push: ${{ github.event_name != 'pull_request' }}
        tags: chatsphere/backend:latest,chatsphere/backend:${{ steps.meta.outputs.version }}
        labels: ${{ steps.meta.outputs.labels }}
    
    - name: Build and push frontend image
      uses: docker/build-push-action@v2
      with:
        context: ./frontend
        push: ${{ github.event_name != 'pull_request' }}
        tags: chatsphere/frontend:latest,chatsphere/frontend:${{ steps.meta.outputs.version }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Deploy to production
      run: |
        echo "Deploying version ${{ github.ref_name }} to production"
        # In a real scenario, you would add deployment steps here
        # Examples:
        # - SSH into server and pull new Docker images
        # - Update Kubernetes deployments
        # - Trigger a deployment in your cloud provider

    - name: Send deployment notification
      run: |
        echo "Deployment of version ${{ github.ref_name }} completed"
        # In a real scenario:
        # - Send notification to Slack/Teams
        # - Update status in monitoring system 